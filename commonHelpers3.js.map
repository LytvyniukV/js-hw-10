{"version":3,"file":"commonHelpers3.js","sources":["../src/js/timer/refs.js","../src/js/timer/convert-time.js","../src/js/timer/show-message.js","../src/js/timer/calendar.js","../src/js/timer/render.js","../src/js/timer/start-timer.js","../src/js/timer/timer.js"],"sourcesContent":["export const refs = {\n  fieldToChooseDate: document.querySelector('#datetime-picker'),\n  btnStartTimer: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n","export const convertMs = ms => {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day)\n    .toString()\n    .padStart(2, '0');\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour)\n    .toString()\n    .padStart(2, '0');\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute)\n    .toString()\n    .padStart(2, '0');\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second)\n    .toString()\n    .padStart(2, '0');\n\n  return { days, hours, minutes, seconds };\n};\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport const showMessage = () => {\n    iziToast.error({\n      message: 'Please choose a date in the future',\n      backgroundColor: 'red',\n      messageColor: 'white',\n      maxWidth: 300,\n      position: 'topRight',\n      timeout: 3000,\n      progressBar: false,\n      transitionIn: 'bounceInRight',\n      transitionOut: 'fadeOutLeft',\n      messageSize: 14,\n    });\n  };","import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { showMessage } from './show-message';\nimport { refs } from './refs';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      showMessage();\n      refs.btnStartTimer.disabled = true;\n    } else {\n      refs.btnStartTimer.disabled = false;\n    }\n  },\n};\n\nexport const calendar = flatpickr(refs.fieldToChooseDate, options);\n","import { refs } from './refs';\nimport { convertMs } from './convert-time';\nimport { currentDate } from './start-timer';\nimport { calendar } from './calendar';\n\nexport const render = () => {\n  const pickedDate = calendar.selectedDates[0];\n  const different = pickedDate - currentDate;\n\n  const { days, hours, minutes, seconds } = convertMs(different);\n  if (different < 1) {\n    refs.days.textContent = '00';\n    refs.hours.textContent = '00';\n    refs.minutes.textContent = '00';\n    refs.seconds.textContent = '00';\n    return;\n  }\n  refs.days.textContent = days;\n  refs.hours.textContent = hours;\n  refs.minutes.textContent = minutes;\n  refs.seconds.textContent = seconds;\n};\n","import { refs } from './refs';\nimport { render } from './render';\nimport { calendar } from './calendar';\nexport let currentDate = Date.now();\nlet idTimerInterval = null;\n\nexport const start = () => {\n  const pickedDate = calendar.selectedDates[0];\n  refs.btnStartTimer.disabled = true;\n  if (idTimerInterval) return;\n  idTimerInterval = setInterval(() => {\n    currentDate += 1000;\n    render();\n  }, 1000);\n  if (pickedDate === currentDate) {\n    clearInterval(idTimerInterval);\n  }\n};","import { refs } from \"./refs\";\nimport { start } from \"./start-timer\";\n\nrefs.btnStartTimer.addEventListener('click', start);\n"],"names":["refs","convertMs","ms","days","hours","minutes","seconds","showMessage","iziToast","options","selectedDates","calendar","flatpickr","render","different","currentDate","idTimerInterval","start","pickedDate"],"mappings":"sGAAO,MAAMA,EAAO,CAClB,kBAAmB,SAAS,cAAc,kBAAkB,EAC5D,cAAe,SAAS,cAAc,oBAAoB,EAC1D,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,ECPaC,EAAYC,GAAM,CAQ7B,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC7B,SAAU,EACV,SAAS,EAAG,GAAG,EAEZE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACvC,SAAU,EACV,SAAS,EAAG,GAAG,EAEZG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,EAEZI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAC/D,SAAU,EACV,SAAS,EAAG,GAAG,EAElB,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,ECtBaC,EAAc,IAAM,CAC7BC,EAAS,MAAM,CACb,QAAS,qCACT,gBAAiB,MACjB,aAAc,QACd,SAAU,IACV,SAAU,WACV,QAAS,IACT,YAAa,GACb,aAAc,gBACd,cAAe,cACf,YAAa,EACnB,CAAK,CACF,ECXGC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,IAAM,IAAI,MAC1BH,IACAP,EAAK,cAAc,SAAW,IAE9BA,EAAK,cAAc,SAAW,EAEjC,CACH,EAEaW,EAAWC,EAAUZ,EAAK,kBAAmBS,CAAO,ECfpDI,EAAS,IAAM,CAE1B,MAAMC,EADaH,EAAS,cAAc,GACXI,EAEzB,CAAE,KAAAZ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUa,CAAS,EAC7D,GAAIA,EAAY,EAAG,CACjBd,EAAK,KAAK,YAAc,KACxBA,EAAK,MAAM,YAAc,KACzBA,EAAK,QAAQ,YAAc,KAC3BA,EAAK,QAAQ,YAAc,KAC3B,MACD,CACDA,EAAK,KAAK,YAAcG,EACxBH,EAAK,MAAM,YAAcI,EACzBJ,EAAK,QAAQ,YAAcK,EAC3BL,EAAK,QAAQ,YAAcM,CAC7B,EClBO,IAAIS,EAAc,KAAK,MAC1BC,EAAkB,KAEf,MAAMC,EAAQ,IAAM,CACzB,MAAMC,EAAaP,EAAS,cAAc,GAC1CX,EAAK,cAAc,SAAW,GAC1B,CAAAgB,IACJA,EAAkB,YAAY,IAAM,CAClCD,GAAe,IACfF,GACD,EAAE,GAAI,EACHK,IAAeH,GACjB,cAAcC,CAAe,EAEjC,ECdAhB,EAAK,cAAc,iBAAiB,QAASiB,CAAK"}